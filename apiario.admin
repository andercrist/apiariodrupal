<?php
/**
 * Arquivo onde fica a área administrativa do módulo
 * @author Anderson Silva
 * @version 1.0
 **/



/**
 * Função responsável em criar o usuário para acesso a API do drupal
 **/
function apiario_createUser() {
  $nome = 'apiario';
  $senha = '';
  $user = user_load_by_name($nome);
  if(!$user){
    //Criar papel com permissões para editar os vídeos
    $apiario_role = new stdClass();
    $apiario_role->name = $nome;
    $apiario_role->weight = 2;
    //Salva o papel
    user_role_save($apiario_role);
    //Permissões adicionais
    user_role_grant_permissions($apiario_role->rid, array(
      //'administer nodes',
      'edit any apiario content',
      //'administer users',
    ));

    // Cria o usuário com o papel criado
    $edit = array();
    $edit['name']   = $nome;
    $edit['mail']   = 'apiario@aovivonaweb.tv';
    $edit['roles']  = array($apiario_role->rid => $apiario_role->rid);
    $edit['pass']   = $senha;
    $edit['status'] = 1;

    $account = user_save(drupal_anonymous_user(), $edit);
    
    $consumer = new DrupalOAuthConsumer(user_password(32), user_password(32), array(
      'callback_url' => '',
      'uid' => $account->uid,
      'provider_consumer' => TRUE,
    ));
    $consumer->name = 'apiario';
    $consumer->context = 'padrao';
    $consumer->callback_url = 'http://colmeia.aovivonaweb.tv/drupal';
    // Update or create the consumer.
    $update = $consumer->in_database;
    $consumer->write(); 
  }
}

/**
 * Função que retorna a key e secret do usuário
 **/
function oauth_common_user_consumers($uid) {
  $result = db_query('SELECT c.secret, c.configuration, pc.*
    FROM {oauth_common_consumer} c
    INNER JOIN {oauth_common_provider_consumer} pc ON pc.csid = c.csid
    WHERE pc.uid = :uid', array(':uid' => $uid));

  $consumers = array();
  while ($consumer = DrupalOAuthConsumer::fromResult($result)) {
    $consumers[] = $consumer;
  }

  return $consumers;
}

/**
 * Formulário das configurações da API
 **/
function apiario_config_form() {
  $client = getClient();
  //Verifica o retorno da APIario com o code para salvar o access token
  if (isset($_GET['code'])) {
    //Parâmetros para solicitar o access token
    $params = array('code' => $_GET['code'], 'redirect_uri' => REDIRECT_URI);
    //Solicita o access token usando o código de autorização
    $response = $client->getAccessToken(TOKEN_ENDPOINT, 'authorization_code', $params);
    //Pega o resultado
    $info = $response['result'];
    if($info != "Error") {
      variable_set('apiario_accesstoken', $info['access_token']);
      variable_set('apiario_refreshtoken', $info['refresh_token']);
      drupal_set_message(t('Access Token salvo com sucesso!'));
    } else {
      //drupal_set_message(t('O código de autorização expirou, tente novamente salvando.'), 'error');
    }
  }

  $form = array();
  // configuração inicial do módulo
  $form['config_inicial'] = array(
    '#type' => 'fieldset',
    '#title' => t('Configuração Inicial'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE
  );

  $form['config_inicial']['apiario_clientid'] = array(
    '#type' => 'textfield',
    '#title' => t('Client Id'),
    '#default_value' => variable_get('apiario_clientid',''),
    '#size' => 60,
    '#description' => t("Informe o client id informado pela APIario"),
    '#required' => TRUE,
  );
  $form['config_inicial']['apiario_clientsecret'] = array(
    '#type' => 'textfield',
    '#title' => t('Client Secret'),
    '#default_value' => variable_get('apiario_clientsecret', ''),
    '#size' => 60,
    '#required' => TRUE,
    '#description' => t('Informe o client secret informado pela APIario'),
  );
  //Pega o access token salvo
  $access_token = variable_get('apiario_accesstoken','');
  //Verifica se foi setado no drupal ou está vazio
  if($access_token != '') {
  	//Verifica se expirou o acess token
    $access_token = checkAccessToken($access_token);
    //Mostra a apiario no drupal
    $form['config_inicial']['apiario_accesstoken'] = array(
      '#type' => 'textfield',
      '#title' => t('Access Token'),
      '#default_value' => $access_token,
      '#size' => 60,
      '#attributes' => array('disabled' => 'disabled'),
      '#description' => t('Seu Access Token fornecido pela APIario, expira em uma hora automaticamente'),
    );        
  }
  $form = system_settings_form($form);
  $form ['#submit'][0] = 'apiario_form_submit';
  return $form;
}
/**
 * Alterando o envio das configurações
 **/
function apiario_form_submit($form, &$form_state) {
  variable_set('apiario_clientid', $form_state['values']['apiario_clientid']);
  variable_set('apiario_clientsecret', $form_state['values']['apiario_clientsecret']);
  drupal_set_message(t('Suas configurações foram salvas com sucesso!'));
  //Após salvar redireciona para a APIario para solicitar a permissão para pegar o access_token
  $client = getClient();
  //Retorna o usuário apiario
  $usuario = user_load_by_name('apiario');
  //Retorna o consummer do usuário
  $consumer = oauth_common_user_consumers($usuario->uid);
  
  //Criptografa o key e secret do drupal e envia para a APIario
  $cipher = mcrypt_module_open(MCRYPT_RIJNDAEL_128, '', MCRYPT_MODE_CBC, '');
  $key256 = '47264967364586938365849622647588';
  $iv = '8672646567572920';
  $key = $consumer[0]->key;
  $secret = $consumer[0]->secret;
  $drupal = '|' . $consumer[0]->key . '|' . $consumer[0]->secret . '|';
  mcrypt_generic_init($cipher, $key256, $iv);
  $cipherText256 = mcrypt_generic($cipher,$drupal );
  mcrypt_generic_deinit($cipher);
  $cipherHexText256 =bin2hex($cipherText256);

  //Prepara a url para solicitar a autorização e código de acesso
  $auth_url = $client->getAuthenticationUrl(AUTHORIZATION_ENDPOINT, REDIRECT_URI);
  //Redireciona para a URL solicitando a autorização
  header('Location: ' . $auth_url . '&drupal=' . $cipherHexText256);
  die('Redirect');  
}